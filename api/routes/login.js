const express = require("express");
const fs = require("fs");
const jwt = require("jsonwebtoken");
const db = require("../database/db")
const querys = require("../database/querys")
const router = express.Router();

const signOptions = {
    expiresIn: "1h",
    algorithm: "RS256"
};

//Never store the private.key and the public.key on the same place. I stored it here in one place only for demonstration.
//The keys were generated by using the Online RSA Key Generator "https://travistidwell.com/jsencrypt/demo/"
const privateKEY = fs.readFileSync("./private.key", "utf8");

router.post("/", (req, response) => {
    let { username, password } = req.body

    //Select user from the database
    db.get("select * from usr where username=$1", [username], (err, res_usr) => {
        if (err) {
            console.log(err)
        } else {
            if (res_usr === undefined) {
                response.sendStatus(404);
            }
            else if (username == res_usr.username && password == res_usr.password) {

                //The payload contains additional data - the user roles
                //This can be used to activate or deactivate features of the REST API according the users role
                db.each(querys.getPayLoad, [res_usr.id], (err, res) => {
                    var token = jwt.sign(res, privateKEY, signOptions);
                    response.status(200).json({ token });
                })
            }
            else {
                response.sendStatus(401);
            }
        }
    })
});

module.exports = router;